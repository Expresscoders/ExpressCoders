{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/surveys.service.ts","./src/app/edit/edit.component.ts","./src/app/edit/edit.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/materials/materials.module.ts","./src/app/surveys/surveys.component.ts","./src/app/surveys/surveys.component.html","./src/app/add/add.component.ts","./src/app/add/add.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    \n    \n    <div class=\"row\">\n        <aside class=\"col-sm-4\">\n \n    <div class=\"card\">\n    <article class=\"card-body\">\n    \n    <h4 class=\"card-title mb-4 mt-1 \">Register</h4>\n         <form>\n            <div class=\"form-group\">\n                <label class=\" float-left\">First Name</label>\n                <input name=\"\" class=\"form-control\" placeholder=\"Email\" type=\"email\">\n            </div>\n            <div class=\"form-group\">\n                <label class=\" float-left\">Last Name</label>\n                <input name=\"\" class=\"form-control\" placeholder=\"Email\" type=\"email\">\n            </div>\n        <div class=\"form-group\">\n            <label class=\" float-left\">Email</label>\n            <input name=\"\" class=\"form-control\" placeholder=\"Email\" type=\"email\">\n        </div> <!-- form-group// -->\n        <div class=\"form-group\">\n            \n            <label class=\" float-left\">Password</label>\n            <input class=\"form-control\" placeholder=\"******\" type=\"password\">\n        </div>\n        <div class=\"form-group\">\n            \n            <label class=\" float-left\">Confirm Password</label>\n            <input class=\"form-control\" placeholder=\"******\" type=\"password\">\n        </div>\n        <!-- form-group// --> \n        <div class=\"form-group\"> \n        <div class=\"checkbox\">\n          <label> <input type=\"checkbox\"> Save password </label>\n        </div> <!-- checkbox .// -->\n        </div> <!-- form-group// -->\n        <div class=\"form-group\"><a [routerLink]=\"['/login']\" routerLinkActive=\"router-link-active\" >Already have an account?</a> </div>\n        <div class=\"form-group\">\n            <button type=\"submit\" class=\"btn btn-primary btn-block\"> Register  </button>\n        </div> <!-- form-group// -->                                                           \n    </form>\n    </article>\n    </div> <!-- card.// -->\n    \n        </aside> <!-- col.// -->\n        <aside class=\"col-sm-4\">","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {HttpClient } from \"@angular/common/http\"\n//import  { map } from \"rxjs/operators\"\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class SurveysService {\n\n  private _surveyUrl = \"http://localhost:3000\"\n  constructor(private http:HttpClient) { }\n  //Read operation\n  getSurveys(){\n    return this.http.get<any>(this._surveyUrl+\"/surveys\")\n  }\n  //To Find Survey By ID\n  surveyById(surveyId){\n    return this.http.get<any>(`${this._surveyUrl}/edit/${surveyId}`)\n  }\n\n  //Update Operation\n  updateSurvey(surveyId,body){\n    return this.http.post<any>(`${this._surveyUrl}/update/${surveyId}`, body)\n  }\n\n  //Create Operation\n  createSurvey(formData){\n    return this.http.post<any>(this._surveyUrl+\"/add\",formData)\n  }\n\n  //Delete Operation\n  deleteSurvey(surveyId){\n    return this.http.delete<any>(`${this._surveyUrl}/delete/${surveyId}`)\n  }\n\n\n  }\n\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, NgForm, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { surveyModel } from '../survey';\nimport { SurveysService } from '../surveys.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  surveyObj:surveyModel;\n  surveyId:string;\n  frmGroup: FormGroup\n  formBuilder:FormBuilder\n\n  constructor(private http:HttpClient,private route:ActivatedRoute, private service:SurveysService, private router:Router) {\n    this.route.params.subscribe(params => {\n      this.surveyId = params.id;\n    });\n\n\n  }\n\n  ngOnInit(): void {\n    this.getSurveyById(this.surveyId)\n  }\n\n\n\n\n  getSurveyById(surveyId){\n    this.service.surveyById(surveyId).subscribe(\n      res=>{this.surveyObj = res;\n      this.frmGroup.patchValue({\n        _id:this.surveyObj._id,\n        surveyName: this.surveyObj.surveyName,\n        option1: this.surveyObj.option1,\n        option2: this.surveyObj.option2\n      })\n      }\n    )\n  }\n\n\n  onSubmit(formData){\n    return this.service.updateSurvey(this.surveyId,formData).subscribe(\n      res => this.router.navigate(['/surveys'])\n    )\n\n  }\n\n}\n","<div class=\"mt-5\">\n  <form #addForm=\"ngForm\" (ngSubmit)=\"onSubmit(addForm.value)\" #f=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\">Survey Name</label>\n      <input\n        [(ngModel)]=\"surveyObj.surveyName\"\n        name=\"surveyName\"\n        type=\"text\"\n        class=\"form-control\"\n        id=\"exampleInputEmail1\"\n        aria-describedby=\"emailHelp\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputPassword1\">option1</label>\n      <input\n        [(ngModel)]=\"surveyObj.option1\"\n        name=\"option1\"\n        type=\"text\"\n        class=\"form-control\"\n        id=\"exampleInputPassword1\"\n        placeholder=\"option1\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputPassword1\">option2</label>\n      <input\n        [(ngModel)]=\"surveyObj.option2\"\n        name=\"option2\"\n        type=\"text\"\n        class=\"form-control\"\n        id=\"exampleInputPassword1\"\n        placeholder=\"option2\"\n      />\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-primary\">Edit</button>\n  </form>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular';\n}\n","\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" routerLink = \"/home\" routerLinkActive = \"active\">SurveyIt</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item \">\n        <a class=\"nav-link\" routerLink=\"/home\" routerLinkActive = \"active\">Home </a>\n      </li>\n      <li class=\"nav-item \">\n        <a class=\"nav-link\" routerLink=\"/surveys\" routerLinkActive = \"active\">Surveys</a>\n      </li>\n    </ul>\n    <ul class=\" navbar-nav ml-auto\">\n      <li class=\" navbar-item\"><a class=\" nav-link\" routerLink = \"/login\" routerLinkActive = \"active\">Login</a></li>\n      <li class=\" navbar-item\"><a class=\" nav-link\" routerLink = \"/register\" routerLinkActive = \"active\">Register</a></li>\n\n    </ul>\n  </div>\n</nav>\n<div class=\" container text-center\">\n  \n  <router-outlet></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {HttpClientModule} from \"@angular/common/http\"\nimport {FormsModule,ReactiveFormsModule } from \"@angular/forms\"\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { SurveysComponent } from './surveys/surveys.component';\nimport { SurveysService } from './surveys.service';\n\nimport { AddComponent } from './add/add.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialsModule } from './materials/materials.module';\nimport { EditComponent } from './edit/edit.component';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    HomeComponent,\n    SurveysComponent,\n    AddComponent,\n    EditComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialsModule\n  ],\n  providers: [SurveysService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport {MatButtonModule} from \"@angular/material/button\"\nimport {MatCardModule} from '@angular/material/card';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\n\n\nconst MaterialComponents = [\n  MatButtonModule,\n  MatCardModule,\n  MatRadioModule,\n  MatIconModule,\n  MatFormFieldModule\n]\n\n@NgModule({\n\n  imports: [MaterialComponents],\n  exports: [MaterialComponents]\n})\nexport class MaterialsModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport{surveyModel} from '../survey'\nimport{SurveysService} from \"../surveys.service\"\nimport {HttpClient} from \"@angular/common/http\"\nimport { Router } from '@angular/router';\nimport {DOCUMENT} from \"@angular/common\"\nimport { inject } from '@angular/core/testing';\n\n@Component({\n  selector: 'app-surveys',\n  templateUrl: './surveys.component.html',\n  styleUrls: ['./surveys.component.css']\n})\n\n\nexport class SurveysComponent implements OnInit {\n  surveyList : surveyModel[] = []\n  constructor(private _surveyService: SurveysService,private http : HttpClient, private route:Router, @Inject(DOCUMENT) private document:Document) { }\n\n  ngOnInit():void {this._surveyService.getSurveys().subscribe(\n    data => {this.surveyList = data },\n    err => console.log(err)\n  ) }\n\n  //sending data to the api for delete operation\n  deleteSurvey(data){\n    this._surveyService.deleteSurvey(data._id)\n    .subscribe(\n      res => this.document.defaultView.location.reload(),\n      err => console.log(data._id)\n    )\n  }\n\n  }\n","\r\n<div class=\"container\" class=\"mt-5\">\r\n  <button mat-mini-fab color = \"primary\" routerLink = \"/add\" class=\" text-center\" style=\"margin-right: 80%;\">Add</button>\r\n    <mat-card *ngFor = \"let survey of surveyList\" class=\"mt-3 mb-3\" style=\"background-color:#f9fcfb;\">\r\n        <a mat-mini-fab color =\"primary\" class = \"float-right \" [routerLink] = \"['/edit', survey._id]\">\r\n        <mat-icon>edit</mat-icon></a>\r\n        <button mat-mini-fab color=\"warn\" class=\" float-right mr-2\" (click)=\"deleteSurvey(survey)\">\r\n            <mat-icon>delete</mat-icon></button><br>\r\n        <mat-card-title >{{survey.surveyName}}</mat-card-title><br>\r\n        <mat-radio-button >{{survey.option1}}</mat-radio-button><br>\r\n        <mat-radio-button >{{survey.option2}}</mat-radio-button><br>\r\n    </mat-card><br>\r\n\r\n\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport {FormGroup, FormsModule,ReactiveFormsModule} from '@angular/forms'\nimport { Router } from '@angular/router';\nimport { surveyModel } from '../survey';\nimport{SurveysService} from \"../surveys.service\"\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n  surveyItem:surveyModel[] = []\n  postUrl = \"http://localhost:3000/add\"\n\n  constructor(private form: FormsModule, private surveyService:SurveysService, private http:HttpClient, private route:Router) { }\n  ngOnInit() {\n  }\n\n  //sending Data entered in form to the backend api using http\n  onSubmit(formData){\n      this.surveyService.createSurvey(formData).subscribe(\n      (res) => this.route.navigate([\"/surveys\"]) ,\n      (err) =>{console.log(err)}\n\n    )\n\n\n  }\n\n}\n","<div class=\"mt-5\">\n  <form #addForm=\"ngForm\" (ngSubmit)=\"onSubmit(addForm.value)\">\n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\">Survey Name</label>\n      <input\n        name=\"surveyName\"\n        ngModel\n        type=\"text\"\n        class=\"form-control\"\n        id=\"exampleInputEmail1\"\n        aria-describedby=\"emailHelp\"\n        placeholder=\"Survey Name\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputPassword1\">option1</label>\n      <input\n        name=\"option1\"\n        ngModel\n        type=\"text\"\n        class=\"form-control\"\n        id=\"exampleInputPassword1\"\n        placeholder=\"option1\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputPassword1\">option2</label>\n      <input\n        name=\"option2\"\n        ngModel\n        type=\"text\"\n        class=\"form-control\"\n        id=\"exampleInputPassword1\"\n        placeholder=\"option1\"\n      />\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-primary\">Add</button>\n  </form>\n</div>\n","import { Component, NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddComponent } from './add/add.component';\nimport { EditComponent } from './edit/edit.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { SurveysComponent } from './surveys/surveys.component';\n\n\n//Routing to the website\nconst routes: Routes = [\n  {\n    path:\"\",\n    redirectTo: \"/home\",\n    pathMatch:\"full\"\n  },\n  {\n    path: \"home\",\n    component: HomeComponent\n  },\n  {\n    path: \"surveys\",\n    component: SurveysComponent\n  },\n  {\n    path: \"login\",\n    component: LoginComponent\n  },\n  {\n    path: \"register\",\n    component: RegisterComponent\n  },\n  {\n    path: \"add\",\n    component:AddComponent\n  },\n  {\n    path:\"edit/:id\",\n    component:EditComponent\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    \n    \n    <div class=\"row\">\n        <aside class=\"col-sm-4\">\n \n    <div class=\"card\">\n    <article class=\"card-body\">\n    \n    <h4 class=\"card-title mb-4 mt-1 ml-5\">Sign in</h4>\n         <form>\n        <div class=\"form-group\">\n            <label class=\" float-left\">Email</label>\n            <input name=\"\" class=\"form-control\" placeholder=\"Email\" type=\"email\">\n        </div> <!-- form-group// -->\n        <div class=\"form-group\">\n            \n            <label class=\" float-left\">Password</label>\n            <input class=\"form-control\" placeholder=\"******\" type=\"password\">\n        </div> <!-- form-group// --> \n        <div class=\"form-group\"> \n        <div class=\"checkbox\">\n          <label> <input type=\"checkbox\"> Save password </label>\n        </div> <!-- checkbox .// -->\n        </div> <!-- form-group// -->  \n        <div class=\"form-group\">\n            <a [routerLink]=\"['/register']\" routerLinkActive=\"router-link-active\">Don't have an account?</a>\n            <br>\n           \n            <button type=\"submit\" class=\"btn btn-primary btn-block\"> Login  </button>\n        </div> <!-- form-group// -->                                                           \n    </form>\n    </article>\n    </div> <!-- card.// -->\n    \n        </aside> <!-- col.// -->\n        <aside class=\"col-sm-4\">","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}